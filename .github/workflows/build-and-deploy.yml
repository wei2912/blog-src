name: Build and Deploy
on:
  pull_request:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v1
        name: Cache Stack
        with:
          path: ~/.stack/
          key: ${{ runner.os }}-stack-${{ hashFiles('**/stack.yaml.lock') }}
          restore-keys: |
            ${{ runner.os }}-stack-

      - run: mkdir -p $HOME/.local/bin
      - name: Setup Stack
        run: curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/stack'
      - name: Setup SASS
        run: curl -L https://github.com/sass/dart-sass/releases/download/1.25.0/dart-sass-1.25.0-linux-x64.tar.gz | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/sass' '*/src'

      - name: Build dependencies
        run: $HOME/.local/bin/stack --no-terminal build
      - name: Build website
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          $HOME/.local/bin/stack exec blog-src build

      - run: tar -czf _site.tar.gz _site/
      - name: Upload build
        uses: actions/upload-artifact@v1
        with:
          name: blog-src-${{ github.sha }}
          path: _site.tar.gz
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: blog-src-${{ github.sha }}
          path: .
      - run: tar -xzf _site.tar.gz

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.0
        with:
          publish-dir: '_site/'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
